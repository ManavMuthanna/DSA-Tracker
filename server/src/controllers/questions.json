{
    "questions": [
      { "name": "Two Sum", "topic": "Array", "difficulty": "Easy" },
      { "name": "Best Time to Buy and Sell Stock", "topic": "Array", "difficulty": "Medium" },
      { "name": "Contains Duplicate", "topic": "Array", "difficulty": "Easy" },
      { "name": "Product of Array Except Self", "topic": "Array", "difficulty": "Medium" },
      { "name": "Maximum Subarray", "topic": "Array", "difficulty": "Medium" },
      { "name": "Maximum Product Subarray", "topic": "Array", "difficulty": "Medium" },
      { "name": "Find Minimum in Rotated Sorted Array", "topic": "Array", "difficulty": "Medium" },
      { "name": "Search in Rotated Sorted Array", "topic": "Array", "difficulty": "Medium" },
      { "name": "3 Sum", "topic": "Array", "difficulty": "Medium" },
      { "name": "Container With Most Water", "topic": "Array", "difficulty": "Medium" },
      { "name": "Sum of Two Integers", "topic": "Binary", "difficulty": "Easy" },
      { "name": "Number of 1 Bits", "topic": "Binary", "difficulty": "Easy" },
      { "name": "Counting Bits", "topic": "Binary", "difficulty": "Medium" },
      { "name": "Missing Number", "topic": "Binary", "difficulty": "Easy" },
      { "name": "Reverse Bits", "topic": "Binary", "difficulty": "Easy" },
      { "name": "Climbing Stairs", "topic": "Dynamic Programming", "difficulty": "Easy" },
      { "name": "Coin Change", "topic": "Dynamic Programming", "difficulty": "Medium" },
      { "name": "Longest Increasing Subsequence", "topic": "Dynamic Programming", "difficulty": "Medium" },
      { "name": "Longest Common Subsequence", "topic": "Dynamic Programming", "difficulty": "Medium" },
      { "name": "Word Break Problem", "topic": "Dynamic Programming", "difficulty": "Medium" },
      { "name": "Combination Sum", "topic": "Dynamic Programming", "difficulty": "Medium" },
      { "name": "House Robber", "topic": "Dynamic Programming", "difficulty": "Easy" },
      { "name": "House Robber II", "topic": "Dynamic Programming", "difficulty": "Medium" },
      { "name": "Decode Ways", "topic": "Dynamic Programming", "difficulty": "Medium" },
      { "name": "Unique Paths", "topic": "Dynamic Programming", "difficulty": "Medium" },
      { "name": "Jump Game", "topic": "Dynamic Programming", "difficulty": "Medium" },
      { "name": "Clone Graph", "topic": "Graph", "difficulty": "Medium" },
      { "name": "Course Schedule", "topic": "Graph", "difficulty": "Medium" },
      { "name": "Pacific Atlantic Water Flow", "topic": "Graph", "difficulty": "Medium" },
      { "name": "Number of Islands", "topic": "Graph", "difficulty": "Medium" },
      { "name": "Longest Consecutive Sequence", "topic": "Graph", "difficulty": "Hard" },
      { "name": "Alien Dictionary (Leetcode Premium)", "topic": "Graph", "difficulty": "Hard" },
      { "name": "Graph Valid Tree (Leetcode Premium)", "topic": "Graph", "difficulty": "Medium" },
      { "name": "Number of Connected Components in an Undirected Graph (Leetcode Premium)", "topic": "Graph", "difficulty": "Medium" },
      { "name": "Insert Interval", "topic": "Interval", "difficulty": "Medium" },
      { "name": "Merge Intervals", "topic": "Interval", "difficulty": "Medium" },
      { "name": "Non-overlapping Intervals", "topic": "Interval", "difficulty": "Medium" },
      { "name": "Meeting Rooms (Leetcode Premium)", "topic": "Interval", "difficulty": "Medium" },
      { "name": "Meeting Rooms II (Leetcode Premium)", "topic": "Interval", "difficulty": "Medium" },
      { "name": "Reverse a Linked List", "topic": "Linked List", "difficulty": "Easy" },
      { "name": "Detect Cycle in a Linked List", "topic": "Linked List", "difficulty": "Medium" },
      { "name": "Merge Two Sorted Lists", "topic": "Linked List", "difficulty": "Easy" },
      { "name": "Merge K Sorted Lists", "topic": "Linked List", "difficulty": "Hard" },
      { "name": "Remove Nth Node From End Of List", "topic": "Linked List", "difficulty": "Medium" },
      { "name": "Reorder List", "topic": "Linked List", "difficulty": "Medium" },
      { "name": "Set Matrix Zeroes", "topic": "Matrix", "difficulty": "Medium" },
      { "name": "Spiral Matrix", "topic": "Matrix", "difficulty": "Medium" },
      { "name": "Rotate Image", "topic": "Matrix", "difficulty": "Medium" },
      { "name": "Word Search", "topic": "Matrix", "difficulty": "Medium" },
      { "name": "Longest Substring Without Repeating Characters", "topic": "String", "difficulty": "Medium" },
      { "name": "Longest Repeating Character Replacement", "topic": "String", "difficulty": "Medium" },
      { "name": "Minimum Window Substring", "topic": "String", "difficulty": "Hard" },
      { "name": "Valid Anagram", "topic": "String", "difficulty": "Easy" },
      { "name": "Group Anagrams", "topic": "String", "difficulty": "Medium" },
      { "name": "Valid Parentheses", "topic": "String", "difficulty": "Easy" },
      { "name": "Valid Palindrome", "topic": "String", "difficulty": "Easy" },
      { "name": "Longest Palindromic Substring", "topic": "String", "difficulty": "Medium" },
      { "name": "Palindromic Substrings", "topic": "String", "difficulty": "Medium" },
      { "name": "Encode and Decode Strings (Leetcode Premium)", "topic": "String", "difficulty": "Medium" },
      { "name": "Maximum Depth of Binary Tree", "topic": "Tree", "difficulty": "Easy" },
      { "name": "Same Tree", "topic": "Tree", "difficulty": "Easy" },
      { "name": "Invert/Flip Binary Tree", "topic": "Tree", "difficulty": "Easy" },
      { "name": "Binary Tree Maximum Path Sum", "topic": "Tree", "difficulty": "Hard" },
      { "name": "Binary Tree Level Order Traversal", "topic": "Tree", "difficulty": "Medium" },
      { "name": "Serialize and Deserialize Binary Tree", "topic": "Tree", "difficulty": "Hard" },
      { "name": "Subtree of Another Tree", "topic": "Tree", "difficulty": "Medium" },
      { "name": "Construct Binary Tree from Preorder and Inorder Traversal", "topic": "Tree", "difficulty": "Medium" },
      { "name": "Validate Binary Search Tree", "topic": "Tree", "difficulty": "Medium" },
      { "name": "Kth Smallest Element in a BST", "topic": "Tree", "difficulty": "Medium" },
      { "name": "Lowest Common Ancestor of BST", "topic": "Tree", "difficulty": "Medium" },
      { "name": "Implement Trie (Prefix Tree)", "topic": "Tree", "difficulty": "Medium" },
      { "name": "Add and Search Word", "topic": "Tree", "difficulty": "Medium" },
      { "name": "Word Search II", "topic": "Tree", "difficulty": "Hard" },
      { "name": "Merge K Sorted Lists", "topic": "Heap", "difficulty": "Hard" },
      { "name": "Top K Frequent Elements", "topic": "Heap", "difficulty": "Medium" },
      { "name": "Find Median from Data Stream", "topic": "Heap", "difficulty": "Hard" }
    ]
  }
  